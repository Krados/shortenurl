// Code generated by mockery v2.18.0. DO NOT EDIT.

package shortener

import mock "github.com/stretchr/testify/mock"

// MockShortener is an autogenerated mock type for the Shortener type
type MockShortener struct {
	mock.Mock
}

// Get provides a mock function with given fields: code
func (_m *MockShortener) Get(code string) (*ShortURL, error) {
	ret := _m.Called(code)

	var r0 *ShortURL
	if rf, ok := ret.Get(0).(func(string) *ShortURL); ok {
		r0 = rf(code)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ShortURL)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(code)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Put provides a mock function with given fields: reqURL
func (_m *MockShortener) Put(reqURL string) (*ShortURL, error) {
	ret := _m.Called(reqURL)

	var r0 *ShortURL
	if rf, ok := ret.Get(0).(func(string) *ShortURL); ok {
		r0 = rf(reqURL)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ShortURL)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(reqURL)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockShortener interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockShortener creates a new instance of MockShortener. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockShortener(t mockConstructorTestingTNewMockShortener) *MockShortener {
	mock := &MockShortener{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

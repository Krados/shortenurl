// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/Krados/shortenurl/internal/conf"
	"github.com/Krados/shortenurl/internal/controller"
	"github.com/Krados/shortenurl/internal/data"
	"github.com/Krados/shortenurl/internal/server"
	"github.com/Krados/shortenurl/internal/service/cache"
	"github.com/Krados/shortenurl/internal/service/shortener"
	"github.com/gin-gonic/gin"
	"go.uber.org/zap"
)

// Injectors from wire.go:

func initApp(cfg *conf.Config, sugar *zap.SugaredLogger) (*gin.Engine, error) {
	db := data.NewMySQL(cfg)
	repository := shortener.NewMySQLRepository(db)
	shortenerShortener := shortener.New(repository)
	universalClient := data.NewRedis(cfg)
	cacheRepository := cache.NewRedisRepository(universalClient)
	cacheCache := cache.New(cacheRepository)
	shortenURLController := controller.NewShortenURLController(sugar, shortenerShortener, cacheCache)
	engine := server.NewHTTPServer(shortenURLController)
	return engine, nil
}
